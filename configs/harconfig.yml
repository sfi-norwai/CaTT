# Predict command
## COMMAND: [ python, predict.py ]
# Train command

SAVE_INTERVAL: 5
VALID_INTERVAL: 1
PATIENCE: 5
TRAIN_COMMAND: [ python, train.py ]
LOO_CV_COMMAND: [python, loo_cross_validation.py]

CLASSES:
  - { label: 1,  name: 'walking',                             }
  - { label: 2,  name: 'running',                             }
  - { label: 3,  name: 'shuffling',                 }
  - { label: 4,  name: 'stairs (ascending)',        }
  - { label: 5,  name: 'stairs (descending)',       }
  - { label: 6,  name: 'standing',                            }
  - { label: 7,  name: 'sitting',                             }
  - { label: 8,  name: 'lying',                               }
  - { label: 13, name: 'cycling (sit)',                       }
  - { label: 14, name: 'cycling (stand)',           }
  - { label: 130, name: 'cycling (sit, inactive)',  }
  - { label: 140, name: 'cycling (stand, inactive)',}

# --- Information about data
# Path to training dataset 
TRAIN_DATA: /ssd4/aleksejl/HUNT4_accelerometer_snippets/

# Amount of training data used for validation (between 0 and 1)
VALID_SPLIT: 0.1
# Randomly selected test subjects (Not used during LOSO!)
TEST_SUBJECTS: [S027.csv,S023.csv,S008.csv,S019.csv,S006.csv,S024.csv, S010.csv,  S014.csv,  S017.csv,  S020.csv]
SEED: 77

NUM_WORKERS: 10  # Num of workers for data loading
NUM_GPUS: [0]  # How many/which GPUs to use
WANDB: True
WANDB_KEY: '97d81dddbca83b1902e24ed795e1ccab52c29943'



DATASET: STFT
DATASET_ARGS:
  x_columns: [[back_x, back_y, back_z, thigh_x, thigh_y, thigh_z]]
  y_column: [label]
  padding_val: [0.0]
  # 50==1sec ==> 3000==60sec==1min
  sequence_length: [15000]  # Window size (in samples) fed into the model
  frame_shift: [5000]  # How much to shift a window (in samples) null=same as sequence_length
  normalize: [True]  # Whether to normalize the training data
  norm_params_path: [params/norm_params/HUNT4/normalization_params_STFT_feats156_seqlen599/]
  n_fft: [50]  # Size of Fourier transform (in samples)
  phase: [False]
  hop_length: [null]  # For STFT computation. If None, n_fft//2

# -- Model 
# Which classifier to use 
ALGORITHM: DownstreamMLP
# Arguments for classifier
# (all given as lists in case to perform a GridSearch)
ALGORITHM_ARGS:
  epochs: [100]
  margin: [5]
  feature_dim: [500]
  temperature: [0.1]
  mask_fraction: [0.2]
  margin_thresh: [0.4]
  mse_lambda: [0.01]
  batch_size: [8]
  tnc_window: [20]
  sequence_sample: [119]

  # MARGIN_LOSS, LS_MARGIN_LOSS, LS_HATCL_LOSS, HATCL_LOSS
  loss: [HATCL_LOSS]
  optimizer: [AdamW]
  weight_decay: [0.0]
#   output_activation: [softmax]
#   metrics: [[F1Score,Accuracy,Precision,Recall]]  # Which metrics to log
  lr: [1e-4]
  lr_scheduler: [ExponentialTFDecay]
  number_subject: [10]
  number_sample: [1]
  total_subjects: [30000]
  # lr_scheduler: [LinearWUSchedule]
  # Architecture params

STORE_CMATS: True  # Store test cmats on disk
SKIP_FINISHED_ARGS: False

# Metric which defines the best model
EVAL_METRIC: average_f1score
